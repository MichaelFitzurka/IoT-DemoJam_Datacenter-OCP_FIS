{
    "apiVersion": "v1",
    "kind": "Template",
    "metadata": {
        "annotations": {
            "description": "Internet of Things DemoJam :: Datacenter Openshift Container Platform :: Fuse Integration Services :: based on: Spring Boot, Camel and ActiveMQ QuickStart. This quickstart demonstrates how to connect a Spring-Boot application to an ActiveMQ broker and use JMS messaging between two Camel routes using OpenShift. In this example we will use two containers, one container to run as a ActiveMQ broker, and another as a client to the broker, where the Camel routes are running. This quickstart requires the ActiveMQ broker has been deployed and running first.",
            "tags": "quickstart,java,springboot,fis",
            "iconClass": "icon-jboss",
            "version": "2.0",
            "openshift.io/display-name": "IoT DemoJam Datacenter's Fuse IS on OCP"
        },
        "name": "iotdj-docp-fis"
    },
    "labels": {
        "template": "iotdj-docp-fis"
    },
    "parameters": [
        {
            "name": "APP_NAME",
            "displayName": "Application Name",
            "required": true,
            "value": "iotdj-docp-fis",
            "description": "The name assigned to the application."
        },
        {
            "name": "GIT_REPO",
            "displayName": "Git Repository URL",
            "required": true,
            "value": "https://github.com/MichaelFitzurka/IoT-DemoJam_Datacenter-OCP_FIS.git",
            "description": "The URL of the repository with your application source code."
        },
        {
            "name": "GIT_REF",
            "displayName": "Git Reference",
            "value": "master",
            "description": "Set this to a branch name, tag or other ref of your repository if you are not using the default branch."
        },
        {
            "name": "GIT_SECRET",
            "displayName": "Source Secret",
            "value": "github-secret",
            "description": "Secret with credentials for pulling your source code."
        },
        {
            "name": "ACTIVEMQ_SERVICE_NAME",
            "displayName": "ActiveMQ Broker Service",
            "required": true,
            "value": "activemq",
            "description": "Set this to the name of the TCP service of the ActiveMQ broker. You may need to create a broker first."
        },
        {
            "name": "ACTIVEMQ_BROKER_USERNAME",
            "displayName": "ActiveMQ Broker Username",
            "required": true,
            "description": "The username used to authenticate with the ActiveMQ broker. Leave it empty if authentication is disabled.",
            "value": "admin"
        },
        {
            "name": "ACTIVEMQ_BROKER_PASSWORD",
            "displayName": "ActiveMQ Broker Password",
            "required": true,
            "description": "The password used to authenticate with the ActiveMQ broker. Leave it empty if authentication is disabled."
        },
        {
            "name": "APP_VERSION",
            "displayName": "Application Version",
            "value": "1.0.0.redhat-000055",
            "description": "The application version."
        },
        {
            "name": "MAVEN_ARGS",
            "displayName": "Maven Arguments",
            "value": "package -DskipTests -Dfabric8.skip -e -B",
            "description": "Arguments passed to mvn in the build."
        },
        {
            "name": "MAVEN_ARGS_APPEND",
            "displayName": "Extra Maven Arguments",
            "description": "Extra arguments passed to mvn, e.g. for multi-module builds."
        },
        {
            "name": "ARTIFACT_DIR",
            "displayName": "Maven build directory",
            "description": "Directory of the artifact to be built, e.g. for multi-module builds."
        },
        {
            "name": "MAVEN_MIRROR_URL",
            "displayName": "Maven mirror URL",
            "value": "http://nexus.iotdj-docp.svc:8081/repository/maven-public/",
            "description": "Maven mirror to use for S2I builds"
        },
        {
            "name": "IMAGE_STREAM_NAMESPACE",
            "displayName": "Image Stream Namespace",
            "value": "openshift",
            "required": true,
            "description": "Namespace in which the Fuse ImageStreams are installed. These ImageStreams are normally installed in the openshift namespace. You should only need to modify this if you've installed the ImageStreams in a different namespace/project."
        },
        {
            "name": "BUILD_SECRET",
            "displayName": "Git Build Secret",
            "generate": "expression",
            "description": "The secret needed to trigger a build.",
            "from": "[a-zA-Z0-9]{40}"
        },
        {
            "name": "CPU_REQUEST",
            "displayName": "CPU request",
            "value": "0.2",
            "required": true,
            "description": "The amount of CPU to requests."
        },
        {
            "name": "CPU_LIMIT",
            "displayName": "CPU limit",
            "value": "1.0",
            "required": true,
            "description": "The amount of CPU the container is limited to use."
        }
    ],
    "objects": [
        {
            "kind": "ImageStream",
            "apiVersion": "v1",
            "metadata": {
                "name": "${APP_NAME}",
                "labels": {
                    "app": "${APP_NAME}"
                }
            }
        },
        {
            "kind": "BuildConfig",
            "apiVersion": "v1",
            "metadata": {
                "name": "${APP_NAME}",
                "labels": {
                    "app": "${APP_NAME}"
                }
            },
            "spec": {
                "triggers": [
                    {
                        "type": "GitHub",
                        "github": {
                            "secret": "${BUILD_SECRET}"
                        }
                    },
                    {
                        "type": "Generic",
                        "generic": {
                            "secret": "${BUILD_SECRET}"
                        }
                    },
                    {
                        "type": "ConfigChange"
                    },
                    {
                        "type": "ImageChange",
                        "imageChange": {}
                    }
                ],
                "source": {
                    "type": "Git",
                    "git": {
                        "uri": "${GIT_REPO}",
                        "ref": "${GIT_REF}"
                    },
                    "sourceSecret": {
                        "name": "${GIT_SECRET}"
                    }
                },
                "strategy": {
                    "type": "Source",
                    "sourceStrategy": {
                        "from": {
                            "kind": "ImageStreamTag",
                            "namespace": "${IMAGE_STREAM_NAMESPACE}",
                            "name": "iotdj-fis-java-openshift:1.0"
                        },
                        "forcePull": false,
                        "incremental": true,
                        "env": [
                            {
                                "name": "BUILD_LOGLEVEL",
                                "value": "5"
                            },
                            {
                                "name": "MAVEN_MIRROR_URL",
                                "value": "${MAVEN_MIRROR_URL}"
                            },
                            {
                                "name": "ARTIFACT_DIR",
                                "value": "${ARTIFACT_DIR}"
                            },
                            {
                                "name": "MAVEN_ARGS",
                                "value": "${MAVEN_ARGS}"
                            },
                            {
                                "name": "MAVEN_ARGS_APPEND",
                                "value": "${MAVEN_ARGS_APPEND}"
                            }
                        ]
                    }
                },
                "output": {
                    "to": {
                        "kind": "ImageStreamTag",
                        "name": "${APP_NAME}:latest"
                    }
                },
                "resources": {}
            },
            "status": {
                "lastVersion": 0
            }
        },
        {
            "kind": "Service",
            "apiVersion": "v1",
            "spec": {
                "ports": [
                    {
                        "name": "8778-tcp",
                        "port": 8778,
                        "targetPort": 8778,
                        "nodePort": 30778
                    },
                    {
                        "name": "jetty-http",
                        "port": 4711,
                        "targetPort": 4711,
                        "nodePort": 30711
                    }
 
                ],
                "selector": {
                    "deploymentconfig": "${APP_NAME}"
                },
                "type": "NodePort"
            },
            "metadata": {
                "name": "${APP_NAME}",
                "labels": {
                    "app": "${APP_NAME}"
                }
            }
        },
        {
            "kind": "DeploymentConfig",
            "apiVersion": "v1",
            "metadata": {
                "name": "${APP_NAME}",
                "creationTimestamp": null,
                "labels": {
                    "app": "${APP_NAME}"
                }
            },
            "spec": {
                "strategy": {
                    "resources": {}
                },
                "triggers": [
                    {
                        "type": "ConfigChange"
                    },
                    {
                        "type": "ImageChange",
                        "imageChangeParams": {
                            "automatic": true,
                            "containerNames": [
                                "${APP_NAME}"
                            ],
                            "from": {
                                "kind": "ImageStreamTag",
                                "name": "${APP_NAME}:latest"
                            }
                        }
                    }
                ],
                "replicas": 1,
                "selector": {
                    "deploymentconfig": "${APP_NAME}"
                },
                "template": {
                    "metadata": {
                        "labels": {
                            "app": "${APP_NAME}",
                            "deploymentconfig": "${APP_NAME}"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "name": "${APP_NAME}",
                                "image": "library/${APP_NAME}:latest",
                                "readinessProbe" : {
                                    "httpGet" : {
                                        "path" : "/health",
                                        "port" : 8081
                                    },
                                    "initialDelaySeconds" : 10
                                },
                                "livenessProbe" : {
                                    "httpGet" : {
                                        "path" : "/health",
                                        "port" : 8081
                                    },
                                    "initialDelaySeconds" : 180
                                },
                                "ports": [
                                    {
                                        "containerPort": 8778,
                                        "name": "jolokia"
                                    },
                                    {
                                        "containerPort": 4711,
                                        "name": "jetty-http"
                                    }
                                ],
                                "env" : [ {
                                    "name" : "KUBERNETES_NAMESPACE",
                                    "valueFrom" : {
                                        "fieldRef" : {
                                            "fieldPath" : "metadata.namespace"
                                        }
                                    }
                                } , {
                                    "name": "ACTIVEMQ_SERVICE_NAME",
                                    "value": "${ACTIVEMQ_SERVICE_NAME}"
                                }, {
                                    "name": "ACTIVEMQ_BROKER_USERNAME",
                                    "value": "${ACTIVEMQ_BROKER_USERNAME}"
                                }, {
                                    "name": "ACTIVEMQ_BROKER_PASSWORD",
                                    "value": "${ACTIVEMQ_BROKER_PASSWORD}"
                                } ],
                                "resources": {
                                    "requests": {
                                        "cpu": "${CPU_REQUEST}"
                                    },
                                    "limits": {
                                        "cpu": "${CPU_LIMIT}"
                                    }
                                }
                            }
                        ]
                    }
                }
            },
            "status": {}
        }
    ]
}
